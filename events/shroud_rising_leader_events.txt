#############################################################
# Shroud Rising Leader Events
# Written by LastLeviathan
#############################################################
namespace = shroud_rising_leader
#############################################################
# shroud_rising_leader.1 | Post battle event to give admiral special trait vs Entities(On Action)
# shroud_rising_leader.2 | Post battle event to give admiral special trait vs Cultists (On Action)
# shroud_rising_leader.3 | Post battle event to spawn general special trait vs Entities (On Action)
# shroud_rising_leader.4 | Post battle event to spawn general special trait vs Cultists(On Action)
# shroud_rising_leader.5 | Relic Activation, choose a leader to become Godlike
# shroud_rising_leader.6 | Leader is given Chosen One or Shroud God
# shroud_rising_leader.7 | Critical Failure
# shroud_rising_leader.8 | Leader turns into Shroud Horror
# shroud_rising_leader.10 | (Hidden) Chance of Discovering a Cultist Sympathizer
# shroud_rising_leader.11 | Cultist Sympathizer Discovered
# shroud_rising_leader.12 | Execute them all
# shroud_rising_leader.13 | Cultist Flee to Another world
# shroud_rising_leader.14 | Cultist Failed Escape Planet
# shroud_rising_leader.15 | Cultist Failed Escape Space
# shroud_rising_leader.16 | Leader Converted by Cult
# shroud_rising_leader.17 | Inquisitor Assasinated
# shroud_rising_leader.18 | Public Trials
# shroud_rising_leader.20 | (Tester) Gives a leader a trait
# shroud_rising_leader.21 | (Hidden) On Action level up (3,5,8) Leader Gets a character Trait
# shroud_rising_leader.22 | (Hidden) ON action bi yearly to give leader with chosen trait the equivalent cultist trait
# shroud_rising_leader.50 | Inquisition Formed
# shroud_rising_leader.51 | Inquisition Disbanded
#############################################################
# ADMIRAL TRAITS
# Victorious admiral gains shroud killer trait (on_fleet_destroyed_perp)
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
country_event = {
	id = shroud_rising_leader.1
	title = "admiral_trait_gain"
	desc = "shroud_rising_leader.1.desc"
	picture = GFX_evt_small_space_battle
	location = fromfrom
	is_triggered_only = yes
	trigger = {
		# merg_is_default_empire = yes
		has_global_flag = rifts_basic_active		# Set on v.3.11.3
		exists = from
		from = {
			OR = { is_country_type = shroud_entities is_country_type = shroud_horrors }
		}
		NOT = { has_active_event = { shroud_rising_leader.1 } }
		exists = fromfrom
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_shroud_veteran }
			}
		}
	}
	immediate = {
		fromfrom = {
			if = {
				limit = { exists = leader }
				leader = { save_event_target_as = officer }
			}
		}
	}
	option = {
		name = "story.221.a"
		trigger = { exists = event_target:officer }
		event_target:officer = { add_trait = leader_trait_admiral_shroud_veteran }
	}
}

# Victorious admiral gains cultist killer trait (on_fleet_destroyed_perp)
country_event = {
	id = shroud_rising_leader.2
	title = "admiral_trait_gain"
	desc = "shroud_rising_leader.2.desc"
	picture = GFX_evt_pirates_attacking_cargo
	location = fromfrom
	is_triggered_only = yes
	trigger = {
		# merg_is_default_empire = yes
		has_global_flag = rifts_basic_active		# Set on v.3.11.3
		exists = from
		from = {
			is_country_type = shroud_cult # OR = { is_country_type = shroud_cult_uprising }
		}
		NOT = { has_active_event = { shroud_rising_leader.2 } }
		exists = fromfrom
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_cultist_veteran }
			}
		}
	}
	immediate = {
		fromfrom = {
			if = {
				limit = { exists = leader }
				leader = { save_event_target_as = officer }
			}
		}
	}
	option = {
		name = "story.221.a"
		trigger = { exists = event_target:officer }
		event_target:officer = { add_trait = leader_trait_admiral_cultist_veteran }
	}
}

# New General with special trait on planet Defense ENTITIES
country_event = {
	id = shroud_rising_leader.3
	title = "shroud_rising_leader.4.name"
	desc = "shroud_rising_leader.3.desc"
	picture = GFX_evt_victorious_army
	location = fromfrom
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		NOT = { has_active_event = { shroud_rising_leader.3 } }
		exists = from
		from = {
			OR = { is_country_type = shroud_entities is_country_type = shroud_horrors }
		}
	}
	immediate = {
		fromfrom = { save_event_target_as = planet }
		random_list = {
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = { trait = leader_trait_restrained trait = leader_trait_general_shroud_veteran }
				}
			}
			# TODO
			# 25 = {
			# 	create_leader = {
			# 		class = commander
			# 		species = owner_main_species
			# 		name = random
			# 		skill = 2
			# 		traits = { trait = leader_trait_inspiring trait = leader_trait_general_shroud_veteran }
			# 	}
			# 	last_created_leader = { save_event_target_as = officer }
			# }
			# 25 = {
			# 	create_leader = {
			# 		class = commander
			# 		species = owner_main_species
			# 		name = random
			# 		skill = 2
			# 		traits = { trait = leader_trait_glory_seeker trait = leader_trait_general_shroud_veteran }
			# 	}
			# 	last_created_leader = { save_event_target_as = officer }
			# }
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = { trait = leader_trait_butcher trait = leader_trait_general_shroud_veteran }
				}
			}
		}
		last_created_leader = { save_event_target_as = officer }
	}
	option = { name = GOOD custom_tooltip = new_general }
}

# New General with special trait on planet Defense CULTISTS (on_planet_defenders_win)
# fromfrom = planet
country_event = {
	id = shroud_rising_leader.4
	title = "shroud_rising_leader.4.name"
	desc = "shroud_rising_leader.4.desc"
	picture = GFX_evt_victorious_army
	location = fromfrom
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		NOT = { has_active_event = { shroud_rising_leader.4 } }
		exists = from
		from = {
			is_country_type = shroud_cult # OR = { is_country_type = shroud_cult_uprising }
		}
	}
	immediate = {
		random_list = {
			# TODO
			# 25 = {
			# 	create_leader = {
			# 		class = commander
			# 		species = owner_main_species
			# 		name = random
			# 		skill = 2
			# 		traits = { trait = leader_trait_inspiring trait = leader_trait_general_cultist_veteran }
			# 	}
			# 	last_created_leader = { save_event_target_as = officer }
			# }
			# 25 = {
			# 	create_leader = {
			# 		class = commander
			# 		species = owner_main_species
			# 		name = random
			# 		skill = 2
			# 		traits = { trait = leader_trait_glory_seeker trait = leader_trait_general_cultist_veteran }
			# 	}
			# 	last_created_leader = { save_event_target_as = officer }
			# }
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = { trait = leader_trait_dreaded trait = leader_trait_general_cultist_veteran }
					effect = { save_event_target_as = officer }
				}
			}
			25 = {
				create_leader = {
					class = commander
					species = owner_main_species
					name = random
					skill = 2
					traits = { trait = leader_trait_butcher trait = leader_trait_general_cultist_veteran }
					effect = { save_event_target_as = officer }
				}
			}
		}
	}
	option = { name = GOOD custom_tooltip = new_general }
}

## Relic activation to pick leader to infuse chosen or god trait
country_event = {
	id = shroud_rising_leader.5
	title = "r_god_heart"
	desc = "shroud_rising_leader.5.desc"
	diplomatic = yes
	diplomatic_title = BLANK_STRING
	force_open = yes
	picture_event_data = { portrait = shroud1 room = shroud_room }
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.5 } } }
	immediate = {
		set_country_flag = shroud_diplomacy_engaged
		random_owned_leader = { save_event_target_as = leader_1 }
		random_owned_leader = {
			limit = { NOT = { is_same_value = event_target:leader_1 } }
			save_event_target_as = leader_2
			root = {
				random_owned_leader = {
					limit = { NOR = { is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 } }
					save_event_target_as = leader_3
					root = {
						random_owned_leader = {
							limit = { NOR = { is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 } }
							save_event_target_as = leader_4
						}
					}
				}
			}
		}
	}
	after = {
		hidden_effect = { remove_country_flag = shroud_diplomacy_engaged }
	}
	option = {
		name = "utopia.2681.a"
		event_target:leader_1 = { save_event_target_as = chosen_leader }
		hidden_effect = {
			country_event = { id = shroud_rising_leader.6 }
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 exists = event_target:leader_1 }
		}
	}
	option = {
		name = "utopia.2681.b"
		allow = { exists = event_target:leader_2 }
		event_target:leader_2 = { save_event_target_as = chosen_leader }
		hidden_effect = {
			country_event = { id = shroud_rising_leader.6 }
		}
	}
	option = {
		name = "utopia.2681.c"
		allow = { exists = event_target:leader_3 }
		event_target:leader_3 = { save_event_target_as = chosen_leader }
		hidden_effect = {
			country_event = { id = shroud_rising_leader.6 }
		}
	}
	option = {
		name = "utopia.2681.d"
		allow = { exists = event_target:leader_4 }
		event_target:leader_4 = { save_event_target_as = chosen_leader }
		hidden_effect = {
			country_event = { id = shroud_rising_leader.6 }
		}
	}
	option = { name = "shroud_rising_leader.5.1.e" custom_tooltip = "shroud_rising_leader.5.1.d.tooltip" default_hide_option = yes }
}

# Success - Gives leader chosen or god trait
country_event = {
	id = shroud_rising_leader.6
	title = "r_god_heart"
	# desc = "shroud_rising_leader.6.desc"
	diplomatic = yes
	diplomatic_title = BLANK_STRING
	force_open = yes
	picture_event_data = { portrait = shroud1 room = shroud_room }
	is_triggered_only = yes
	desc = {
		text = shroud_rising_leader.6.1.desc
		# trigger = {
		# 	event_target:chosen_leader = {
		# 		has_chosen_one_leader_trait = no
		# 	}
		# }
	}
	desc = {
		text = shroud_rising_leader.6.2.desc
		exclusive_trigger = {
			event_target:chosen_leader = { has_chosen_one_leader_trait = yes }
		}
	}
	trigger = { NOT = { has_active_event = { shroud_rising_leader.6 } } }
	immediate = { set_country_flag = shroud_diplomacy_engaged set_country_flag = shroud_vision_10 }
	after = {
		hidden_effect = { remove_country_flag = shroud_diplomacy_engaged }
	}
	# Leader with Chosen already turns into God
	option = {
		name = "exit.shroud"
		# default_hide_option = yes
		exclusive_trigger = {
			event_target:chosen_leader = { has_chosen_one_leader_trait = yes }
		}
		event_target:chosen_leader = { remove_all_negative_traits = yes add_trait = leader_trait_shroud_god remove_trait = leader_trait_chosen }
		remove_relic = r_god_heart
	}
	# Leader with no Chosen gets it
	option = {
		name = "exit.shroud"
		# default_hide_option = yes
		exclusive_trigger = {
			event_target:chosen_leader = { has_chosen_one_leader_trait = no }
		}
		event_target:chosen_leader = { remove_all_negative_traits = yes add_trait = leader_trait_chosen remove_trait = leader_trait_psionic }
		hidden_effect = {
			# Woops, chaos time
			random = { chance = 5 country_event = { id = shroud_rising_leader.7 } }
		}
	}
}

# Critical Failure
country_event = {
	id = shroud_rising_leader.7
	title = "r_god_heart"
	desc = "shroud_rising_leader.7.desc"
	diplomatic = yes
	diplomatic_title = BLANK_STRING
	force_open = yes
	picture_event_data = { portrait = shroud1 room = shroud_room }
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.7 } } }
	immediate = { set_country_flag = shroud_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = shroud_diplomacy_engaged }
	}
	option = {
		name = "exit.shroud"
		hidden_effect = {
			event_target:chosen_leader = {
				# kill_leader = { show_notification = no }
				save_event_target_as = chosen_leader
			}
			country_event = { id = shroud_rising_leader.8 }
		}
	}
}

# Shroud Incursion (Leader turns into Shroud Horror)
country_event = {
	id = shroud_rising_leader.8
	title = "utopia.3024.name"
	desc = "utopia.3024.desc"
	picture = GFX_evt_dimensional_horror
	show_sound = event_psionic
	location = event_target:shroud_spawn_system
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.8 } } }
	immediate = {
		if = {
			limit = { NOT = { exists = event_target:shroud_horror_fleet } }
			create_country = {
				name = "NAME_shroud_horrors"
				type = shroud_horrors
				name_list = "SHROUD_HORRORS"
				flag = {
					icon = { category = "special" file = "the_shroud.dds" }
					background = { category = "backgrounds" file = "00_solid.dds" }
					colors = { "dark_purple" "black" "null" "null" }
				}
				effect = {
					apply_shroud_rising_difficulty = yes
					save_global_event_target_as = shroud_horror_fleet
					if = {
						limit = { exists = event_target:chosen_leader }
						event_target:chosen_leader = { set_owner = prev }
						assign_leader = event_target:chosen_leader
					}
				}
			}
		}
		random_system_within_border = {
			save_event_target_as = shroud_spawn_system
			random_system_planet = { save_event_target_as = shroud_spawn_planet }
		}
		event_target:shroud_horror_fleet = {
			create_fleet = {
				# name = random
				settings = { spawn_debris = no is_boss = yes }
				effect = {
					set_owner = event_target:shroud_horror_fleet
					create_ship = { name = "NAME_greater_horror_hunger" design = "NAME_horror_hunger" }
					set_location = event_target:shroud_spawn_planet
					set_fleet_stance = aggressive
					set_fleet_bombardment_stance = devour
					set_aggro_range_measure_from = self
					set_aggro_range = 300
					# save_event_target_as = shroud_horror_fleet_name TODO?
				}
			}
			if = {
				limit = { exists = event_target:chosen_leader }
				if = {
					limit = { NOT = { leader_class = commander } }
					event_target:chosen_leader = { change_leader_class = commander }
				}
				last_created_fleet = { assign_leader = event_target:chosen_leader }
			}
			else = { log="chosen_leader does not exists" }
		}
	}
	option = { name = "utopia.3024.a" }
}

# HIDDEN | ON ACTION Chance of discovering a Cult Sympathizer (on_five_year_pulse_country)
country_event = {
	id = shroud_rising_leader.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = eot_active
		# is_ai = no
		NOR = { has_civic = civic_shroud_worship is_gestalt = yes }
		any_owned_leader = { has_cultist_trait_non_ruler = yes }
	}
	immediate = {
		reroll_random = yes
		# Discover Cultist
		random_list = {
			5 = { }
			5 = { modifier = { factor = 1.5 any_owned_leader = { has_trait = leader_trait_shroud_inquisitor } } modifier = { factor = 1.5 any_owned_leader = { is_councilor = yes is_councilor_type = councilor_ruler_inquisitor } } country_event = { id = shroud_rising_leader.11 days = 100 random = 100 } }
		}
	}
}

# Discover a Cult Sympathizer
country_event = {
	id = shroud_rising_leader.11
	title = "shroud_rising_leader.11.name"
	# desc = "shroud_rising_leader.11.desc"
	picture = GFX_evt_cover_blown
	is_triggered_only = yes
	desc = { text = shroud_rising_leader.11.1.desc }
	desc = {
		text = shroud_rising_leader.11.2.desc
		exclusive_trigger = {
			OR = {
				exists = event_target:inquisitor_leader_1
				any_owned_leader = { has_trait = leader_trait_shroud_inquisitor }
			}
		}
	}
	trigger = {
		has_global_flag = eot_active
		NOR = {
			# is_ai = yes
			has_civic = civic_shroud_worship
			is_gestalt = yes
			has_active_event = { shroud_rising_leader.11 }
		}
		any_owned_leader = { has_cultist_trait_non_ruler = yes }
	}
	immediate = {
		reroll_random = yes
		random_owned_leader = {
			limit = { has_trait = leader_trait_shroud_inquisitor }
			save_event_target_as = inquisitor_leader_1
		}
		random_owned_leader = {
			limit = {
				has_cultist_trait_non_ruler = yes
				NAND = { exists = event_target:inquisitor_leader_1 is_same_value = event_target:inquisitor_leader_1 }
			}
			save_event_target_as = corrupted_leader_1
		}
	}
	# Execute
	option = {
		name = shroud_rising_leader.11.a
		allow = { is_egalitarian = no }
		add_modifier = { modifier = executed_cultists }
		hidden_effect = {
			random_list = {
				10 = {
					modifier = { factor = 100
						any_owned_leader = {
							OR = { is_ruler = yes is_councilor = yes }
							has_cultist_trait_non_ruler = yes
						}
					}
					modifier = { factor = 4 is_ai = yes }
					country_event = { id = shroud_rising_leader.13 days = 5 random = 2 } # Escape out of the empire
				}
				10 = {
					country_event = { id = shroud_rising_leader.14 days = 5 random = 2 } # Escape failed land
				}
				20 = {
					country_event = { id = shroud_rising_leader.15 days = 5 random = 2 } # Escape failed space
				}
				60 = { modifier = { factor = 0 is_ai = yes }
					country_event = { id = shroud_rising_leader.12 days = 5 random = 2 } # Execution
				}
			}
		}
	}
	# Arrest them
	option = {
		name = shroud_rising_leader.11.b
		add_modifier = { modifier = arrested_cultists }
		hidden_effect = {
			event_target:corrupted_leader_1 = { save_event_target_as = corrupted_leader }
			random_list = {
				10 = {
					modifier = { factor = 100
						any_owned_leader = {
							OR = { is_ruler = yes is_councilor = yes }
							has_cultist_trait_non_ruler = yes
						}
					}
					modifier = { factor = 4 is_ai = yes }
					country_event = { id = shroud_rising_leader.13 days = 5 random = 2 } # Escape out of the empire
				}
				10 = {
					country_event = { id = shroud_rising_leader.14 days = 5 random = 2 } # Escape failed land
				}
				20 = {
					country_event = { id = shroud_rising_leader.15 days = 5 random = 2 } # Escape failed space
				}
				60 = { modifier = { factor = 0 is_ai = yes }
					country_event = { id = shroud_rising_leader.18 days = 5 random = 2 } # Arrest them
				}
			}
		}
	}
	# Do nothing
	option = {
		name = "astral_rift.1425.b"
		hidden_effect = {
			country_event = { id = shroud_rising_leader.16 days = 90 random = 30 }
			# Leader is corrupted
			random_list = {
				# Assassination of inquisitor, increased if cultists are on the council
				30 = {
					modifier = { factor = 0 NOT = { exists = event_target:inquisitor_leader_1 } }
					modifier = { factor = 100
						any_owned_leader = {
							OR = { is_ruler = yes is_councilor = yes }
							has_cultist_trait_non_ruler = yes
						}
					}
					country_event = { id = shroud_rising_leader.17 days = 30 random = 15 }
					# Inquisitor is assassinated
				}
				# No assassination
				70 = { }
			}
		}
	}
}

# Execute them all
country_event = {
	id = shroud_rising_leader.12
	title = "shroud_rising_leader.12.name"
	desc = "shroud_rising_leader.12.desc"
	picture = GFX_evt_surrender
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.12 } } }
	immediate = { }
	after = {
		event_target:corrupted_leader_1 = {
			kill_leader = { show_notification = yes }
		}
	}
	option = { name = "distar.7.b" }
	option = { name = "fircon.1310.a" }
}

# Cultists Flee to another world
country_event = {
	id = shroud_rising_leader.13
	title = "shroud_rising_leader.13.name"
	desc = "shroud_rising_leader.13.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:cult_escape_world
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.13 } } }
	immediate = {
		event_target:corrupted_leader_1 = {
			species = { save_event_target_as = leader_species }
			# kill_leader = { show_notification = no }
			add_random_negative_character_trait = yes
		}
		if = {
			limit = { NOT = { exists = event_target:leader_species } }
			random_owned_species = { save_event_target_as = leader_species }
		}
		random_system = {
			limit = {
				has_owner = no
				any_system_planet = { habitable_planet = yes is_under_colonization = no }
			}
			random_system_planet = {
				limit = { habitable_planet = yes is_under_colonization = no }
				save_event_target_as = cult_escape_world
			}
		}
		## Copy technology
		if = {
			limit = {
				any_neighbor_country = {
					merg_is_default_empire = yes
					relative_power = { who = root value > equivalent category = technology }
				}
			}
			random_neighbor_country = {
				limit = {
					merg_is_default_empire = yes
					relative_power = { who = root value > equivalent category = technology }
				}
				save_event_target_as = tech_country
			}
		}
		else_if = {
			limit = {
				any_playable_country = {
					is_ai = no
					NOT = { is_same_empire = root }
					has_communications = root
					relative_power = { who = root value > equivalent category = technology }
				}
			}
			random_playable_country = {
				limit = {
					is_ai = no
					NOT = { is_same_empire = root }
					has_communications = root
					relative_power = { who = root value > equivalent category = technology }
				}
				save_event_target_as = tech_country
			}
		}
		else = {
			random_playable_country = {
				limit = {
					NOT = { is_same_empire = root }
					has_communications = root
					relative_power = { who = root value > equivalent category = technology }
				}
				save_event_target_as = tech_country
			}
		}

		event_target:cult_escape_world = {
			# set_name = "The Refuge"
			clear_planet_modifiers = yes
			create_rebels = {
				name = random
				species = event_target:leader_species
				ethos = { ethic = "ethic_spiritualist" ethic = "ethic_militarist" ethic = "ethic_authoritarian" }
				authority = auth_dictatorial
				civics = { civic = civic_shroud_worship civic = civic_barbaric_despoilers civic = civic_cutthroat_politics }
				# origin = "origin_separatists"
				flag = random
				# ignore_initial_colony_error = yes
				# day_zero_contact = no
				effect = {
					set_country_type = default
					set_country_flag = chaos_empire
					save_event_target_as = cult_escape_country
					establish_communications_no_message = root

					if = {
						limit = { exists = event_target:tech_country }
						copy_techs_from = {
							target = event_target:tech_country
							except = {
								# Horizon Signal
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
							}
						}
					}
					## Add some new technologies
					inverted_switch = { trigger = has_technology
						tech_starbase_2		= { give_technology = { tech = tech_starbase_2 } }
						tech_starbase_3		= { give_technology = { tech = tech_starbase_3 } }
						tech_starbase_4		= { give_technology = { tech = tech_starbase_4 } }
						tech_starbase_5		= { give_technology = { tech = tech_starbase_5 } }
						tech_power_plant_4	= { give_technology = { tech = tech_power_plant_4 } }
						tech_mining_3		= { give_technology = { tech = tech_mining_3 } }
						tech_power_hub_1	= { give_technology = { tech = tech_power_hub_1 } }
					}
					## Add resources
					add_resource = {
						minerals = 10000
						energy = 10000
						food = 3000
						consumer_goods = 3000
						alloys = 7000
						influence = 500
					}
					add_500_unity_per_year_passed = yes
					## Create fleets
					if = {
						limit = { has_technology = tech_destroyers }
						create_fleet = {
							effect = {
								set_owner = event_target:cult_escape_country
								while = { count = 12
									create_ship = { name = random random_existing_design = destroyer }
								}
								set_location = { target = event_target:cult_escape_world distance = 10 angle = random }
							}
						}
					}
					if = {
						limit = { has_technology = tech_cruisers }
						create_fleet = {
							effect = {
								set_owner = event_target:cult_escape_country
								while = { count = 6
									create_ship = { name = random random_existing_design = cruiser }
								}
								set_location = { target = event_target:cult_escape_world distance = 10 angle = random }
							}
						}
					}
					if = {
						limit = { has_technology = tech_battleships }
						create_fleet = {
							effect = {
								set_owner = event_target:cult_escape_country
								while = { count = 3
									create_ship = { name = random random_existing_design = battleship }
								}
								set_location = { target = event_target:cult_escape_world distance = 10 angle = random }
							}
						}
					}
					create_fleet = {
						effect = {
							set_owner = event_target:cult_escape_country
							while = { count = 25
								create_ship = { name = random random_existing_design = corvette }
							}
							set_location = { target = event_target:cult_escape_world distance = 10 angle = random }
						}
					}
					apply_shroud_rising_difficulty = yes # every_country = { establish_communications_no_message = prev }
				}
			}
			set_owner = event_target:cult_escape_country
			set_capital = yes
			while = { count = 35
				create_pop = { species = event_target:leader_species }
			}
			while = { count = 3
				add_district_and_planet_size_if_needed_effect = { district = district_city }
			}
			while = { count = 4
				add_district_and_planet_size_if_needed_effect = { district = district_industrial }
				add_district_and_planet_size_if_needed_effect = { district = district_farming }
				add_district_and_planet_size_if_needed_effect = { district = district_mining }
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
			}
			add_district_and_planet_size_if_needed_effect = { district = district_generator }
			add_building = building_system_capital
			add_building = building_research_lab_1
			add_building = building_foundry_1
			add_building = building_food_processing_facility
			add_building = building_energy_grid
			add_building = building_mineral_purification_plant
			add_building = building_bureaucratic_1
			add_building = building_bureaucratic_1
			while = { count = 10
				create_army = {
					name = random
					owner = event_target:cult_escape_country
					species = event_target:leader_species
					type = defense_army
				}
			}
			solar_system = {
				create_starbase = { size = starbase_citadel module = shipyard owner = event_target:cult_escape_country }
			}
		}
	}
	after = {
		owner = {
			random_owned_starbase = { set_starbase_size = starbase_citadel }
			if = {
				limit = { exists = event_target:corrupted_leader_1 }
				event_target:corrupted_leader_1 = { set_owner = prev }
			}
			# From = origin country, needed for set_origin_effect
			fire_on_action = { on_action = on_released_as_vassal scopes = { from = root } }
			if = {
				limit = { mid_game_years_passed > -2 used_naval_capacity_percent < 0.8 }
				create_fleet_from_naval_cap = 0.2
			}
		}
	}
	option = { name = "ancrel.15006.a" }
}

# Cultist Attempt Escape on planet
country_event = {
	id = shroud_rising_leader.14
	title = "shroud_rising_leader.14.name"
	desc = "shroud_rising_leader.14.desc"
	picture = GFX_evt_interior_battle
	location = event_target:cult_escape_planet
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.14 } } }
	immediate = {
		event_target:corrupted_leader_1 = {
			species = { save_event_target_as = leader_species }
		}
		if = {
			limit = { NOT = { exists = event_target:leader_species } }
			random_owned_species = { save_event_target_as = leader_species }
		}
		# owner = { save_event_target_as = cult_uprising_owner }
		random_owned_planet = {
			limit = { is_colony = yes has_ground_combat = no }
			save_event_target_as = cult_escape_planet
			create_rebels = {
				name = "NAME_shroud_cultists"
				species = event_target:leader_species
				ethos = { ethic = "ethic_spiritualist" ethic = "ethic_militarist" ethic = "ethic_authoritarian" }
				authority = auth_dictatorial
				civics = { civic = civic_shroud_worship civic = civic_barbaric_despoilers civic = civic_cutthroat_politics }
				# origin = "origin_separatists"
				name_list = "CULTISTS"
				effect = {
					set_country_type = shroud_cult # shroud_cult_uprising
					apply_shroud_rising_difficulty = yes
					save_event_target_as = cultist_rebels
					country_event = { id = shroud_rising_cult_uprising.19 days = 600 } # Merge
				}
			}
		}
	}
	option = {
		name = "ancrel.15006.a"
		event_target:corrupted_leader_1 = {
			kill_leader = { show_notification = yes }
		}
		hidden_effect = {
			event_target:cult_escape_planet = {
				create_fleet = {
					effect = {
						set_owner = event_target:cultist_rebels
						set_name = "NAME_cultist_army"
						while = { count = 2
							create_army_transport = { army_type = "shroud_cultist_army" army_name = "NAME_cultist_army" species = event_target:leader_species }
						}
						set_location = { target = prev }
						set_fleet_stance = aggressive
					}
				}
				while = { count = 2
					create_army = {
						name = "NAME_cultist_army"
						owner = event_target:cultist_rebels
						species = event_target:leader_species
						type = "shroud_cultist_army"
					}
				}
			}
		}
	}
}

# Cultist Attempt Escape with ships
# (From shroud_rising_leader.11)
country_event = {
	id = shroud_rising_leader.15
	title = "shroud_rising_leader.15.name"
	desc = "shroud_rising_leader.15.desc"
	picture = GFX_evt_small_space_battle
	location = event_target:cult_escape_planet
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.15 } } }
	immediate = {
		# owner = { save_event_target_as = cult_uprising_owner }
		random_owned_planet = {
			limit = { num_sapient_pops > 1 }
			random_owned_species = { save_event_target_as = leader_species }
			save_event_target_as = cult_escape_planet
			create_rebels = {
				name = NAME_treasonous_cultists
				species = event_target:leader_species
				ethos = { ethic = "ethic_spiritualist" ethic = "ethic_militarist" ethic = "ethic_authoritarian" }
				authority = auth_dictatorial
				civics = { civic = civic_shroud_worship civic = civic_barbaric_despoilers civic = civic_cutthroat_politics }
				origin = "origin_separatists"
				name_list = "CULTISTS"
				effect = {
					set_country_type = shroud_cult # shroud_cult_uprising
					apply_shroud_rising_difficulty = yes
					save_event_target_as = cultist_rebels
					country_event = { id = shroud_rising_cult_uprising.19 days = 600 } # Merge
				}
			}
			create_fleet = {
				name = "NAME_traitor_fleet"
				effect = {
					set_owner = event_target:cultist_rebels
					while = { count = 1
						create_ship = { name = "NAME_traitor_ship" design = "NAME_Ravager" }
					}
					while = { count = 2
						create_ship = { name = "NAME_traitor_ship" design = "NAME_Dagger" }
					}
					set_location = { target = event_target:cult_escape_planet distance = 80 }
					set_fleet_stance = aggressive
					set_fleet_bombardment_stance = indiscriminate
					set_aggro_range_measure_from = self
					set_aggro_range = 300
				}
			}
		}
	}
	option = {
		name = "ancrel.15006.a"
		event_target:corrupted_leader_1 = {
			kill_leader = { show_notification = yes }
		}
	}
}

# Leader Converted by Cult
country_event = {
	id = shroud_rising_leader.16
	title = "shroud_rising_leader.16.name"
	desc = "shroud_rising_leader.16.desc"
	picture = GFX_evt_acquire_asset
	is_triggered_only = yes
	trigger = {
		NOR = { has_active_event = { shroud_rising_leader.16 } has_country_flag = recent_cult_conversion }
		any_owned_leader = {
			NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist has_cultist_trait_non_ruler = yes }
		}
	}
	immediate = {
		# Prevents spawning in the same system # 8 years max conversion
		set_timed_country_flag = { flag = recent_cult_conversion years = 8 }
		random_owned_leader = {
			limit = { NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist has_cultist_trait_non_ruler = yes } }
			save_event_target_as = corrupted_leader_2
		}
	}
	option = {
		name = "ancrel.15006.a"
		hidden_effect = {
			event_target:corrupted_leader_2 = { add_random_negative_character_trait = yes }
		}
	}
}

# Assassination of Inquisitor
country_event = {
	id = shroud_rising_leader.17
	title = "shroud_rising_leader.17.name"
	desc = "shroud_rising_leader.17.desc"
	picture = GFX_evt_assassination_1
	is_triggered_only = yes
	trigger = {
		NOT = { has_active_event = { shroud_rising_leader.17 } }
		exists = event_target:inquisitor_leader_1
		any_owned_leader = { is_same_value = event_target:inquisitor_leader_1 }
	}
	immediate = {
		event_target:inquisitor_leader_1 = {
			kill_leader = { show_notification = yes }
		}
	}
	option = { name = "ancrel.15006.a" }
}

# Public Trials
country_event = {
	id = shroud_rising_leader.18
	title = "shroud_rising_leader.18.name"
	desc = "shroud_rising_leader.18.desc"
	picture = GFX_evt_trial_1
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.18 } } }
	immediate = {
		event_target:corrupted_leader_1 = {
			kill_leader = { show_notification = no }
		}
	}
	option = { name = "astral_rift.130.a" } # Excellent
	option = { name = "shroud_rising_leader.18.b" }
}

# TODO
# TESTER | Leader gets character trait
country_event = {
	id = shroud_rising_leader.20
	hide_window = yes
	is_triggered_only = yes
	is_test_event = yes
	immediate = {
		random_owned_leader = {
			limit = { leader_class = commander has_chosen_covenant_trait_non_ruler = no }
			# add_trait = leader_trait_shroud_inquisitor
			# add_trait = leader_trait_general_cultist_veteran
			# add_trait = leader_trait_shroud_god
			# add_trait_no_notify = leader_trait_cultist_composer
			# add_random_character_trait = yes
			random_list = {
				25 = { add_trait = leader_trait_whisperers_chosen }
				25 = { add_trait = leader_trait_eater_chosen }
				25 = { add_trait = leader_trait_composer_chosen }
				25 = { add_trait = leader_trait_instrument_chosen }
			}
			if = {
				limit = { NOT = { has_ethic = ethic_spiritualist } }
				change_background_ethic = ethic_spiritualist
			}
		}
	}
}

# HIDDEN | Leader gets character trait (on_leader_level_up)
country_event = {
	id = shroud_rising_leader.21
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		is_ai = no		# Do I want AI having this too, or will it add to lag for no gameplay value?
		is_gestalt = no
		exists = from
		from = {
			OR = { has_skill = 3 has_skill = 5 has_skill = 8 }
			# Only one character trait per leader
			NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist has_cultist_trait_non_ruler = yes }
		}
	}
	immediate = {
		# from = { save_event_target_as = leader_character_trait }
		# random_owned_leader = { limit = { is_same_value = event_target:leader_character_trait
		from = {
			if = {
				limit = {
					has_chosen_covenant_trait_non_ruler = yes
					NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist has_cultist_trait_non_ruler = yes }
				}
				add_random_negative_character_trait = yes
			}
			# If specific negative traits, higher chance of cultist trait. Same for positive traits and loyal traits
			else = {
				random_list = {
					# Negative traits
					25 = {
						modifier = { factor = 0.5
							owner = {
								any_owned_leader = { has_trait = leader_trait_shroud_inquisitor }
							}
						}
						modifier = { factor = 0
							OR = {
								has_cultist_trait_non_ruler = yes
								NOR = {
									has_trait = leader_trait_substance_abuser
									has_trait = leader_trait_substance_abuser_2
									has_trait = leader_trait_corrupt
									has_trait = leader_trait_corrupt_2
									has_trait = leader_trait_maniacal
									has_trait = leader_trait_maniacal_2
									has_trait = leader_trait_maniacal_3
									has_trait = leader_trait_neurotic
									has_trait = leader_trait_neurotic_2
									has_trait = leader_trait_destructive
									has_trait = leader_trait_destructive_2
									has_trait = leader_trait_shroud_preacher
									has_trait = leader_trait_sadistic
									has_trait = leader_trait_sadistic_2
									has_trait = leader_trait_lawless
									has_trait = leader_trait_lawless_2
									has_trait = leader_trait_volatile
									has_trait = leader_trait_volatile_2
									has_trait = leader_trait_tyrannical
									has_trait = leader_trait_tyrannical_2
								}
							}
						}
						add_random_negative_character_trait = yes
					}
					# Positive traits
					75 = {
						modifier = { factor = 0
							OR = {
								has_trait = leader_trait_substance_abuser
								has_trait = leader_trait_substance_abuser_2
								has_trait = leader_trait_corrupt
								has_trait = leader_trait_corrupt_2
								has_trait = leader_trait_maniacal
								has_trait = leader_trait_maniacal_2
								has_trait = leader_trait_maniacal_3
								has_trait = leader_trait_neurotic
								has_trait = leader_trait_neurotic_2
								has_trait = leader_trait_destructive
								has_trait = leader_trait_destructive_2
								has_trait = leader_trait_shroud_preacher
								has_trait = leader_trait_sadistic
								has_trait = leader_trait_sadistic_2
								has_trait = leader_trait_lawless
								has_trait = leader_trait_lawless_2
								has_trait = leader_trait_volatile
								has_trait = leader_trait_volatile_2
								has_trait = leader_trait_tyrannical
								has_trait = leader_trait_tyrannical_2
							}
							NOT = { has_trait = leader_trait_collective_wisdom }
						}
						# ADD_RANDOM_POSITIVE_CHARACTER_TRAIT
						random_list = {
							70 = { add_trait = leader_trait_loyalist }
							30 = { add_trait = leader_trait_shroud_inquisitor }
						}
					}
					# If none of other traits, random chances
					1 = {
						# add_random_character_trait = yes TODO?
						# add_trait_no_notify = "random_common"
						# add_trait_no_notify = "random_negative"
						root = { country_event = { id = leader.100 } } # Add traits from civics
					}
				}
			}
		}
	}
}

# (on_bi_yearly_pulse_country) give cultist trait to chosen | HIDDEN
country_event = {
	id = shroud_rising_leader.22
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		# has_global_flag = eot_active
		# is_ai = no			# Do I want AI having this too, or will it add to lag for no gameplay value?
		# is_gestalt = no # is_regular_empire = yes #
		any_owned_leader = {
			has_chosen_covenant_trait_non_ruler = yes
			has_cultist_trait_non_ruler = no
			# NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist }
		}
	}
	immediate = {
		random_owned_leader = {
			limit = {
				has_chosen_covenant_trait_non_ruler = yes
				has_cultist_trait_non_ruler = no
				# NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist }
			}
			weights = { base = 1
				modifier = { add = 100 NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist } }
			}
			add_random_negative_character_trait = yes
		}
		set_country_flag = chosen_leader_corrupted
	}
}

# (on_bi_yearly_pulse) give cultist trait to chosen | HIDDEN
event = {
	id = shroud_rising_leader.23
	is_triggered_only = yes
	hide_window = yes
	trigger = { has_global_flag = eot_active }
	immediate = {
		random_playable_country = {
			limit = {
				NOR = { is_gestalt = yes has_civic = civic_shroud_worship has_country_flag = eye_of_terror_reopened_country }
				any_owned_leader = {
					has_chosen_covenant_trait_non_ruler = yes
					has_cultist_trait_non_ruler = no
					NOR = { has_trait = leader_trait_shroud_inquisitor has_trait = leader_trait_loyalist }
				}
			}
			weights = { base = 1
				modifier = { add = 50 NOT = { has_country_flag = chosen_leader_corrupted } }
			}
			if = {
				limit = { has_country_flag = chosen_leader_corrupted }
				remove_country_flag = chosen_leader_corrupted
			}
			else = {
				country_event = { id = shroud_rising_leader.22 days = 17 random = 5 }
			}
		}
	}
}

# Inquisition Formed
country_event = {
	id = shroud_rising_leader.50
	title = "shroud_rising_leader.50.name"
	desc = "shroud_rising_leader.50.desc"
	picture = GFX_evt_three_sided_deal
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.50 } } }
	immediate = { }
	option = { name = "astral_rift.2030.a" }
	option = { name = shroud_rising_leader.50.b }
}

# Inquisition Disbanded
country_event = {
	id = shroud_rising_leader.51
	title = "shroud_rising_leader.51.name"
	desc = "shroud_rising_leader.51.desc"
	picture = GFX_evt_civil_action
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { shroud_rising_leader.51 } } }
	immediate = { }
	option = { name = "astral_rift.2030.a" }
}
