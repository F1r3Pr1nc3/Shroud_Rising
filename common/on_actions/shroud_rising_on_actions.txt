# on_game_start = {
# 	events = {
# 		shroud_rising_trigger.10		# Player % message
# 	}
# }

# Triggers when pressing begin in the intro window
# This = country to press begin
on_press_begin = {
	events = {
		shroud_rising_trigger.0
	}
}

on_single_player_save_game_load = {
	events = {
		shroud_rising_trigger.10		# Player % message
		shroud_rising_trigger.99		# TEMP FIX
	}
}

# Triggers when pressing begin in the intro window
# This = country to press begin
on_press_begin = {
	events = {
		# shroud_rising_settings.1		# Menu
		# shroud_rising_settings.11		# Player % message
	}
}

# No scope, like on_game_start
on_monthly_pulse = {
	events = {
		# shroud_rising_trigger.1			# Player % message for saved multiplayer games
		shroud_rising_shroud_rift.270		# Triggers check to collapse unstable rifts
		shroud_rising_eye_of_terror.71		# Slowly removes Eye of Terror rifts if sealed
		shroud_rising_eye_of_terror.110		# Slowly adds Eye of Terror rifts if reopened
		# shroud_rising_invasion.1 # Test for Incursions basic rift
		# shroud_rising_invasion.3 # Test for greater rift spawn
		# shroud_rising_invasion.7 # Eye of Terror incursion testing testing
		# shroud_rising_invasion.3 # Incursion greater rift testing
		# shroud_rising_trigger.4 # For TESTING only
		# shroud_rising_eye_of_terror.202	# Shroud storm for TESTING
		# shroud_rising_eye_of_terror.200 # Shroud world TESTING
		# shroud_rising_eye_of_terror.206	# Shroud cultist for TESTING
		# shroud_rising_shroud_rift.100 # Shroud spawn army testing
		# shroud_rising_shroud_rift.103 # Shroud spawn testing Eye of Terror
		# shroud_rising_shroud_rift.23 # Shroud Rift random testing
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		shroud_rising_trigger.4			# EoT Spawn chain trigger start
		# shroud_rising_invasion.1		# Incursions basic rift
		shroud_rising_invasion.109		# Test if spawn ancient god once 15 planets devoured
		# shroud_rising_invasion.7		# Eye of Terror incursion testing testing
		shroud_rising_leader.23			# Checks if there's a shroud chosen and adds cultist trait
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		# shroud_rising_trigger.4		# EoT Spawn chain trigger start
		shroud_rising_invasion.1		# Incursions basic rift
		shroud_rising_invasion.3		# Greater rift spawn
		shroud_rising_shroud_rift.100		# Shroud spawn on planets near rifts
		# shroud_rising_shroud_rift.103		# Shroud spawn on planets Eye of Terror
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		shroud_rising_ambient.1		# Shroud storm
	}
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		shroud_rising_invasion.7		# Eye of Terror incursion
		shroud_rising_shroud_rift.23		# Random unstable rift spawn
	}
}

# No scope, like on_game_start
# on_mid_game_pulse = {
# 	events = {
# 		shroud_rising_trigger.3		# Allows Eye of Terror to trigger now
# 	}
# }

# No scope, like on_game_start
# on_late_game_pulse = {
#	events = {
#	}
# }

# this = country
# on_monthly_pulse_country = {
# 	events = {
# 		shroud_rising_shroud_rift.991		# If system is owned, alert of local nightmares
# 		shroud_rising_shroud_rift.9991		# Stage 2 of nightmares
# 	}
# }

# this = country
on_yearly_pulse_country = {
	events = {
		shroud_rising_shroud_rift.991		# If system is owned, alert of local nightmares
		shroud_rising_shroud_rift.9991		# Stage 2 of nightmares
	}
}

# on_ruler_set = {
# }

# this = country
# on_bi_yearly_pulse_country = {
# 	events = {
# 		shroud_rising_leader.22		# Checks if there's a shroud chosen and adds cultist trait
# 	}
# }

# this = country
on_five_year_pulse_country = {
	events = {
		shroud_rising_leader.10		# Discover shroud cultist in government
	}
}

# this = country
# on_decade_pulse_country = {
#	events = {
#	}
# }

# this = country
# on_mid_game_pulse_country = {
#	events = {
#	}
# }

# this = country
# on_late_game_pulse_country = {
#	events = {
#	}
# }

# A planet has been colonized.
# Scope = Planet
# on_colonized = {
#	events = {
#	}
# }

# Fires for each planet every year (counting up from colonisation date, includes home planet)
# on_colony_yearly_pulse = {
# }

# Fires for each planet every 5 years (counting up from colonisation date, includes home planet)
on_colony_5_year_pulse = {
	random_events = {
		50 = 0
		50 = shroud_rising_cult_uprising.1		# uprising
	}
}

# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_2_year_old = {
	random_events = {
		150 = 0
		5 = shroud_rising_colony.1		# Temple whispers
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		shroud_rising_invasion.9		# Horrors devour planet and turn it into shroud world
		shroud_rising_invasion.11		# Cultists invade
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# fromfrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# The planet controller; e.g. Spawned monster armies
# Are attackers, but if they win and the player attempts
# To retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		shroud_rising_invasion.12		# If cult wins, add cult hub modifier
	}
}

# Triggers country_event for the attacker upon defeat
# This = country, attack leader
# From = country, planet owner
# fromfrom = planet
# on_planet_attackers_lose = {
#	events = {
#	}
# }

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# fromfrom = planet
on_planet_defenders_win = {
	events = {
		shroud_rising_cult_uprising.7		# Defeat a cult uprising
	}
	random_events = {
		96 = 0		# Others were 2
		2 = shroud_rising_leader.3		# General spawn with special trait vs entities
		2 = shroud_rising_leader.4		# General spawn with special trait  vs cultists
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# fromfrom = planet
on_planet_defenders_lose = {
	events = {
		shroud_rising_cult_uprising.8		# Defeated by a cult uprising
	}
}

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
on_fleet_destroyed_perp = {
	# events = {
	# }
	random_events = {
		96 = 0		# Others were 2
		2 = shroud_rising_leader.1		# Admiral trait for entities
		2 = shroud_rising_leader.2		# Admiral trait for cultists
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# fromfrom = ship 1
# fromfromfrom = ship 2
on_ship_destroyed_victim = {
	events = {
		shroud_rising_invasion.100
		shroud_rising_invasion.107
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# fromfrom = ship 1
# fromfromfrom = ship 2
on_ship_destroyed_perp = {
	events = {
		shroud_rising_invasion.101
	}
}

# An army has been killed in ground combat
# This = owner
# From = army
# fromfrom = opponent
# fromfromfrom = planet
on_army_killed_in_combat = {
	events = {
		shroud_rising_invasion.102
		shroud_rising_invasion.103
	}
}

# An army has ceased to exist for any other reason
# This = country
# From = army
# on_army_killed_no_combat = {
#	events = {
#	}
# }

# Fires when you first get intel (_low and up) on a new system
# Scope = Country
# From = System
# on_system_first_visited = {
#	events = {
#	}
# }

# Triggers event when each country first sends a ship into the system (once per country)
# Scope = Ship
# From = System
# fromfrom = Country
# on_entering_system_first_time = {
#	events = {
#	}
# }

# A fleet has entered a system | See also: on_fleet_auto_move_arrival
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		shroud_rising_shroud_rift.9992		# Small tear system entry 1st time
		shroud_rising_shroud_rift.106		# Shroud Rift system entry 1st time
		shroud_rising_eye_of_terror.6		# Eye of Terror system entry 1st time
	}
}

# Executed when a megastructure has a new owner
# this = new owner
# from = megastructure
# fromfrom = old owner (if existing)
# on_megastructure_change_owner = {
#	events = {
#	}
# }

# A Megastructure has been built
# Root = Country
# From = Megastructure
# fromfrom = System
# fromfromfrom = Fleet
# on_megastructure_built = {
#	events = {
#	}
# }

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# fromfrom = System
# on_megastructure_upgraded = {
#	events = {
#	}
# }

# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	# events = {
	# }
	random_events = {
		90 = 0
		10 = shroud_rising_leader.21		# Give random character trait
	}
}

# You have changed the location of your capital. Also called when a country's capital is first set e.g. during galaxy creation (but then FROM is not set)
# this/root = new capital
# from = old capital
on_capital_changed = {
	events = {
		shroud_rising_colony.16 # Handling achieve_ftl_effect
	}
}
