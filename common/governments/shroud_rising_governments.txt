# gov_example = {
#	possible = {}							# Determines if a government name can be chosen. AND trigger, scope: country; valid triggers: has_ethic, has_authority, has_valid_civic; everything else is undefined behavior!
#	weight = {								# Scriptable value, scope: country; the (possible) government type with the biggest weight is assigned to the country
#		base = 100
#	}
#
#	ruler_title = RT_KING					# Translation tag for male ruler's title
#	ruler_title_female = RT_QUEEN			# Translation tag for female ruler's title
#	heir_title = HT_CROWN_PRINCE			# Translation tag for male heir's title
#	heir_title_female = HT_CROWN_PRINCESS	# Translation tag for female heir's title
#	use_regnal_names = yes / no				# default: no
#	dynastic_last_names = yes / no			# default: no
#	should_force_rename = yes / no			# default: no - if set to yes, empires changing to or from this government will be renamed even if authority type does not change
#
#	election_candidates = {					# Scriptable value to weight election candidates for oligarchic elections, scope: leader
#		modifier = {
#			add = 100
#			is_ruler = yes
#		}
#	}
#}

################################
### Spiritualist Governments ###
################################

# Theocratic Dictatorship
gov_cultist_dictatorship = {
	ruler_title = RT_WARMASTER					
	ruler_title_female = RT_WARMISTRESS			

	should_force_rename = yes
	
	

	possible = {
		has_civic = civic_shroud_worship			
		has_authority = auth_dictatorial
		
		
	}

	weight = {
		base = 1000
	}
}

# Theocratic Dictatorship
gov_cultist_oligarchic = {
	ruler_title = RT_HIGH_APOSTLE					
	ruler_title_female = RT_HIGH_APOSTLE_FEMALE			

	should_force_rename = yes
	
	
	possible = {
		has_civic = civic_shroud_worship	
		has_authority = auth_oligarchic
	
		
		
	}

	weight = {
		base = 1000
	}
}

# Theocratic Dictatorship
gov_cultist_imperial = {
	ruler_title = RT_LORD					
	ruler_title_female = RT_LADY			

	should_force_rename = yes	

	possible = {
		has_civic = civic_shroud_worship			
		has_authority = auth_imperial
		
		
	}

	weight = {
		base = 1000
	}
}
