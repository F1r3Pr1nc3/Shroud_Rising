# Call this from the Situation, at the end
cleanup_cult_uprising_situation = {
	owner = {
		every_owned_planet = {
			limit = { has_planet_flag = cult_uprising_planet }
			remove_planet_flag = cult_uprising_planet
			if = {
				limit = { has_modifier = cult_pleasure }
				remove_modifier = cult_pleasure
			}
			if = {
				limit = { has_modifier = cult_disappearances }
				remove_modifier = cult_disappearances
			}
			if = {
				limit = { has_modifier = cult_sacrifices }
				remove_modifier = cult_sacrifices
			}
		}
	}
}

add_random_negative_character_trait = {
	if = {
		limit = { has_trait = leader_trait_loyalist }
		remove_trait = leader_trait_loyalist
	}
	if = {
		limit = { has_trait = leader_trait_shroud_inquisitor }
		remove_trait = leader_trait_shroud_inquisitor
	}
	save_event_target_as = corrupted_leader
	# If is chosen of a power, give them the associated cultist trait
	if = {
		limit = { has_chosen_covenant_trait_non_ruler = yes }
		switch = { trigger = has_trait
			leader_trait_whisperers_chosen	= { add_trait_no_notify = leader_trait_cultist_whisperers }
			leader_trait_eater_chosen		= { add_trait_no_notify = leader_trait_cultist_eater }
			leader_trait_composer_chosen	= { add_trait_no_notify = leader_trait_cultist_composer }
			leader_trait_instrument_chosen	= { add_trait_no_notify = leader_trait_cultist_instrument }
		}
	}
	else = {
		random_list = {
			25 = { add_trait_no_notify = leader_trait_cultist_whisperers }
			25 = { add_trait_no_notify = leader_trait_cultist_eater }
			25 = { add_trait_no_notify = leader_trait_cultist_composer }
			25 = { add_trait_no_notify = leader_trait_cultist_instrument }
		}
	}

	if = {
		limit = { NOT = { has_ethic = ethic_spiritualist } }
		change_background_ethic = ethic_spiritualist
	}
	root = {
		create_message = {	# Notify of corruption
			type = MESSAGE_LEADER_CORRUPTED
			localization =  MESSAGE_LEADER_CORRUPTED_DESC
			days = @trait_sorting_priority_yes_negative # 20
			target = event_target:corrupted_leader
			variable = { type = name localization = LEADER scope = event_target:corrupted_leader }
			variable = { key = "border" value = "GFX_border_veteran" }
		}
	}
}
